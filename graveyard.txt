   public static void main(String[] args) {
      JFrame f = new JFrame();
      f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      String label[][] = {{"hello", "asdasd"}, {"test", "asdasd"}, {"asd", "asdasd"}, {"qweqw", "asdasd"}};
      f.add(new Buttons(4, 2,label));
      f.pack();
      f.setVisible(true);
   }
}


SMbuttonPanel.setLayout(new GridLayout(3, 2, 100, 20));
        SMbuttonPanel.setBackground(Color.BLACK);

        JButton buttons[] = new JButton[3];
        String labels[] = { "CONTINUE", "NEW", "QUIT"};
        for (int i = 0; i < buttons.length; i++) {
            final int ii = i;
            JButton b = new JButton(labels[i]);
            b.setBackground(Color.BLACK);
            b.setForeground(Color.GREEN);
            b.setFocusPainted(false);
            b.setBorder(BorderFactory.createEmptyBorder());
            // Browse through the buttons using Arrow Keys
            b.addKeyListener(new KeyAdapter() {
                @Override
                public void keyPressed(KeyEvent e) {
                    if (e.getKeyCode() == KeyEvent.VK_UP) {
                        if (ii > 0)
                            buttons[ii - 1].requestFocus();
                        if (ii == 0)
                            buttons[2].requestFocus();
                    } else if (e.getKeyCode() == KeyEvent.VK_DOWN) {
                        if (ii < 2)
                            buttons[ii + 1].requestFocus();
                        if (ii == 2)
                            buttons[0].requestFocus();
                    }
                }
            });
            // Call when Enter pressed
            b.addKeyListener(new KeyAdapter() {
                @Override
                public void keyPressed(KeyEvent e) {
                    if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                        // TODO:
                        if (b.getText().equals("CONTINUE")) {
                            // System.out.println(b.getText());
                            // Choice = 1;
                            // remove(StartingMenuPanel);
                            // MainGame();
                            // revalidate();
                            // repaint();
                    System.out.println(ii);

                        } else if (b.getText().equals("NEW")) {
                            Choice = 2;
                            System.out.println(ii);

                        } else if (b.getText().equals("QUIT")) {
                            Choice = 3;
                            System.out.println(ii);

                        }
                    }
                }
            });
            // Change Colors when changing focused button
            b.addFocusListener(new FocusListener() {
                @Override
                public void focusGained(FocusEvent e) {
                    b.setBackground(Color.GREEN);
                    b.setForeground(Color.BLACK);
                }

                @Override
                public void focusLost(FocusEvent e) {
                    b.setBackground(Color.BLACK);
                    b.setForeground(Color.GREEN);
                }
            });
            SMbuttonPanel.add(buttons[i] = b);
        }